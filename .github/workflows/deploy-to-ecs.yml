name: Deploy to AWS ECS Fargate

on:
  push:
    branches:
      - main
env:
  file: .env_docker_example
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActionsSession
          aws-region: ${{ secrets.AWS_REGION}}
          audience: https://github.com
          
      - name: Print current working directory
        run: pwd

      - name: Print env variable role arn
        run: echo ${{ secrets.AWS_ROLE_ARN }}

      - name: Print env variable region
        run: echo ${{ secrets.AWS_REGION}}

        
      - name: Print env variable
        run: echo $DATABASE_URL
    
      - name: Load Environment Variables
        run: |
          cat .env_docker_example >> $GITHUB_ENV

      - name: Print env variable
        run: echo $DATABASE_URL
        
      - name: Build Docker Image
        run: |
          docker build \
            --build-arg logLevelEnvVar=${LOG_LEVEL}
            --build-arg databaseURLEnvVar=${DATABASE_URL}
            --build-arg portEnvVar=${PORT}
            --build-arg dBEnvVar=${DB}
            --build-arg dBMaxIdleEnvVar=${DB_MAX_IDLE}
            --build-arg dBMaxOpenEnvVar=${DB_MAX_OPEN}
            --build-arg dBMaxLifeTimeEnvVar=${DB_MAX_LIFE_TIME}
            --build-arg dBMaxIdleTimeEnvVar=${DB_MAX_IDLE_TIME}
            --build-arg zapConf=${ZAP_CONF}
            --build-arg gormConf=${GORM_CONF}
            --build-arg pprofEnable=${PPROF_ENABLE}          
            --build-arg DB_USER=${{ env.DB_USER }} \
            --build-arg DB_PASSWORD=${{ env.DB_PASSWORD }} \
            -t 175716812235.dkr.ecr.us-east-2.amazonaws.com/backend-microservices/user-service-stage:latest \
            -f service/user_service/Dockerfile \
            service/user_service/


   
